name: AI Solve Issue

on:
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      issue_id:
        description: "The ID of the issue to process"
        required: true

jobs:
  propose-solution:
    if: (github.event_name == 'issues' && github.event.label.name == 'ai-solve' && github.event.issue.user.login == 'nkyriazis') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master # Change to your base branch if different
          fetch-depth: 0

      - name: Setup steps
        uses: ./.github/actions/setup-steps
        with:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          actor: ${{ github.actor }}

      - name: Fetch issue details
        if: github.event_name == 'workflow_dispatch'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          ISSUE_ID=${{ github.event.inputs.issue_id }}
          gh issue view "$ISSUE_ID" --json title,body,number,author --jq '.' > issue-details.json

      - name: Create a file that has the issue body
        id: issue-info
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ISSUE_TITLE=$(jq -r '.title' issue-details.json)
            ISSUE_BODY=$(jq -r '.body' issue-details.json)
            ISSUE_NUMBER=$(jq -r '.number' issue-details.json)
            ISSUE_USER=$(jq -r '.author.login' issue-details.json)
          else
            ISSUE_TITLE="${{ github.event.issue.title }}"
            ISSUE_BODY="${{ github.event.issue.body }}"
            ISSUE_NUMBER="${{ github.event.issue.number }}"
            ISSUE_USER="${{ github.event.issue.user.login }}"
          fi
          echo -e "Issue Title: $ISSUE_TITLE\n\nIssue Body:\n$ISSUE_BODY\n\nIssue Number: $ISSUE_NUMBER\n\nIssue User: $ISSUE_USER\n\nYour Task: Read the issue, understand what is being asked, have a look at the codebase, decide changes, apply changes." > ISSUE_BODY.txt
          echo "ISSUE_TITLE=$ISSUE_TITLE" >> $GITHUB_ENV
          echo "ISSUE_ID=$ISSUE_NUMBER" >> $GITHUB_ENV
          echo "ISSUE_USER=$ISSUE_USER" >> $GITHUB_ENV
          echo "ISSUE_BODY=$ISSUE_BODY" >> $GITHUB_ENV

      - name: Print issue details (debugging)
        run: |
          echo "Issue Title: ${ISSUE_TITLE}"
          echo "Issue Number: ${ISSUE_ID}"
          echo "Issue User: ${ISSUE_USER}"
          echo "Issue Body: ${ISSUE_BODY}"

      - name: Print the issue body (debugging)
        run: cat ISSUE_BODY.txt

      - name: Start a new branch
        run: git checkout -b propose-solution-${{ steps.issue-info.outputs.ISSUE_ID }}

      - name: Unleash the AI
        uses: ./.github/actions/docker-run
        with:
          image: ghcr.io/nkyriazis/cv_builder:latest
          command: |
            git config --global --add safe.directory /workspace
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} aider --model gpt-4o --yes-always --no-suggest-shell-commands --message-file ISSUE_BODY.txt

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
