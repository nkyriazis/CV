name: Release CV

on: [push]

jobs:
    build:
        name: Upload Release Asset
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Cache Docker layers
            uses: actions/cache@v4
            with:
              path: /tmp/latex-docker-image.tar
              key: ${{ runner.os }}-docker-${{ hashFiles('**/*.tex') }}
              restore-keys: |
                ${{ runner.os }}-docker-

          - name: Load Docker image from cache
            if: steps.cache.outputs.cache-hit == 'true'
            run: docker load -i /tmp/latex-docker-image.tar

          - name: Build Docker image
            if: steps.cache.outputs.cache-hit != 'true'
            run: |
              docker build -t latex-image .
              docker save -o /tmp/latex-docker-image.tar latex-image

          - name: Cache LaTeX build artifacts
            uses: actions/cache@v4
            with:
              path: |
                ~/.texlive
                ./cv.aux
                ./cv.log
                ./cv.out
              key: ${{ runner.os }}-latex-${{ hashFiles('**/*.tex') }}
              restore-keys: |
                ${{ runner.os }}-latex-

          - name: Build project
            uses: xu-cheng/latex-action@v2
            with:
              root_file: cv.tex
              docker_image: latex-image

          - name: Generate timestamp tag
            id: timestamp_tag
            run: echo "::set-output name=timestamp_tag::release-$(date +'%Y%m%d%H%M%S')"

          - name: Create Release
            id: create_release
            uses: actions/create-release@v1.0.0
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ steps.timestamp_tag.outputs.timestamp_tag }}
              release_name: ${{ steps.timestamp_tag.outputs.timestamp_tag }}
              draft: false
              prerelease: false

          - name: Upload Release Asset
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1.0.1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./cv.pdf
              asset_name: cv.pdf
              asset_content_type: application/pdf
