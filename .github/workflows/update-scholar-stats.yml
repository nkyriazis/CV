name: Update Scholar Stats and Create PR

on:
  workflow_dispatch:

  schedule:
    - cron: "0 0 * * 0"

jobs:
  update-scholar-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup steps
        uses: ./.github/actions/setup-steps
        with:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          actor: ${{ github.actor }}

      - name: Run the tool that fetches the latest data and updates the file
        uses: ./.github/actions/docker-run
        with:
          image: ghcr.io/nkyriazis/cv_builder:latest
          command: scripts/cli update-scholar-stats-cli --user-id fUsz0D8AAAAJ --io-file data.yml

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v20
        id: data-updated
        with:
          files: data.yml

      - name: Commit changes
        if: steps.data-updated.outputs.files_changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add data.yml
          git commit -m "Update Google Scholar stats"

      - name: Check for existing PR
        id: check_pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:update-scholar-stats`
            });

            const { execSync } = require('child_process');
            const diffContent = execSync('git diff HEAD~1 HEAD data.yml')
              .toString()
              .split('\n')
              .filter(line => line.startsWith('+') && !line.startsWith('+++'))
              .join('\n');
            const crypto = require('crypto');
            const diffHash = crypto.createHash('sha256').update(diffContent).digest('hex').substring(0, 8);

            const existingPR = pullRequests.find(pr => pr.title.includes(diffHash));

            core.setOutput('hasExistingPR', existingPR ? 'true' : 'false');
            core.setOutput('diffHash', diffHash);

      - name: Print computed diff hash
        run: echo "Computed diff hash ${{ steps.check_pr.outputs.diffHash }}"

      - name: Create Pull Request
        if: steps.data-updated.outputs.files_changed == 'true' && steps.check_pr.outputs.hasExistingPR == 'false'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update Google Scholar stats"
          branch: update-scholar-stats-${{ steps.check_pr.outputs.diffHash || 'default' }}
          title: "Update Google Scholar stats (${{ steps.check_pr.outputs.diffHash || 'N/A' }})"
          body: "This PR updates the Google Scholar stats in data.yml."
          labels: update, scholar-stats
